<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<circle cx="12" cy="32" r="6" fill="currentColor">
		<animate attributeName="cy" values="32;12" dur="0.6s" fill="freeze" />
	</circle>
	<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="2" stroke-dasharray="2" stroke-dashoffset="2">
		<path d="M0 0">
			<animate attributeName="d" values="M12 19v1M19 12h1M12 5v-1M5 12h-1;M12 21v1M21 12h1M12 3v-1M3 12h-1" begin="0.7s" dur="0.2s" fill="freeze" />
			<animate attributeName="stroke-dashoffset" values="2;0" begin="0.7s" dur="0.2s" fill="freeze" />
		</path>
		<path d="M0 0">
			<animate attributeName="d" values="M17 17l0.5 0.5M17 7l0.5 -0.5M7 7l-0.5 -0.5M7 17l-0.5 0.5;M18.5 18.5l0.5 0.5M18.5 5.5l0.5 -0.5M5.5 5.5l-0.5 -0.5M5.5 18.5l-0.5 0.5" begin="0.9s" dur="0.2s" fill="freeze" />
			<animate attributeName="stroke-dashoffset" values="2;0" begin="0.9s" dur="0.2s" fill="freeze" id="lastStroke" />
		</path>
		<animateTransform attributeName="transform" type="rotate" values="0 12 12;360 12 12" begin="lastStroke.end" dur="30s" repeatCount="indefinite" />
	</g>
	<script>
		document.addEventListener('DOMContentLoaded', () => { const node = document.getElementById('lastStroke'); if (node) { let svg = node.parentNode.parentNode.parentNode; if ('pauseAnimations' in svg) { let hover = false; let loaded = false; node.addEventListener('endEvent', () => { loaded = true; if (!hover) { svg.pauseAnimations(); } }); svg.addEventListener('mouseenter', () => { hover = true; svg.unpauseAnimations(); }); svg.addEventListener('mouseleave', () => { hover = false; if (loaded) { svg.pauseAnimations(); } }); } } });
	</script>
</svg>
